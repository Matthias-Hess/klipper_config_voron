[gcode_macro clean_nozzle]
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_len:            20	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/min, of the purge.
variable_purge_ret:             2            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            1            ; Dwell/wait time, in seconds, after purging and retracting.

; location of the nozzle for brushing 
variable_start_x: 240.0 
variable_end_x: 278.0
variable_start_y: 304.0
variable_end_y: 308.0
variable_start_z: -1.0

; location of the nozzle for purge
variable_purge_x: 290
variable_purge_y: 307
variable_purge_z: -1

variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 10.0

gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28 ; Home all axis
  {% endif %}

  G90                            ; absolute positioning   

  ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
  ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
  {% if printer.extruder.temperature >= purge_temp_min %}
      
    G1 Z{raise_distance}           ; safe travel height
    G1 X{purge_x} Y{purge_y} F6000 ; move to purge location (X, Y)
    G1 Z{purge_z}                  ; move closer into bucket
    M83                            ; relative mode
    G1 E{purge_len} F{purge_spd}   ; purge
    G1 E-{purge_ret} F{purge_spd * 5} ; retract
    G4 P{ooze_dwell * 1000}        ; wait
    G92 E0                         ; reset extruder
    G1 Z{start_z} F1500            ; move to brushing height
    G1 X{start_x} Y{start_y} F{wipe_spd * 60} ; move to start position over the brush to red rid of the filament string
  {% else %}
     G1 Z{raise_distance}           ; safe travel height
     G1 X{start_x} Y{start_y} F6000 ; move to start position
     G1 Z{start_z} F1500            ; move to brushing height
  {% endif %}
 
  
 

  ## Wipe nozzle (wipe_qty) times
  {% for wipe in range(0, wipe_qty) %}
    G1 X{start_x } Y{start_y + wipe * ((end_y - start_y) / wipe_qty)} F{wipe_spd * 60} ; go to wipe start (left)
    G1 X{end_x} F{wipe_spd * 60}
  {% endfor %}

  ## Raise nozzle
  G1 Z{raise_distance}


